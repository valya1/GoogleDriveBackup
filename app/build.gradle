apply plugin: 'com.android.application'
apply plugin: 'jacoco'

jacoco {
    toolVersion = "0.7.1.201405082137"
}

def coverageSourceDirs = [
        '../app/src/main/java'
]

task jacocoTestReport(type: JacocoReport, dependsOn: "testDebugUnitTest") {
    group = "Reporting"

    description = "Generate Jacoco coverage reports"

    classDirectories = fileTree(
            dir: '../app/build/intermediates/classes/debug',
            excludes: ['**/R.class',
                       '**/R$*.class',
                       '**/*$ViewInjector*.*',
                       '**/*$ViewBinder*.*',   //DI
                       '**/*_MembersInjector*.*',  //DI
                       '**/*_Factory*.*',  //DI
                       '**/testrx/model/dto/*.*', //dto model
                       '**/testrx/presenter/vo/*.*', //vo model
                       '**/testrx/other/**',
                       '**/BuildConfig.*',
                       '**/Manifest*.*',
                       '**/Lambda$*.class',
                       '**/Lambda.class',
                       '**/*Lambda.class',
                       '**/*Lambda*.class']
    )

    additionalSourceDirs = files(coverageSourceDirs)
    sourceDirectories = files(coverageSourceDirs)
    executionData = files('../app/build/jacoco/testDebugUnitTest.exec')

    reports {
        xml.enabled = true
        html.enabled = true
    }
}

android {
    compileSdkVersion 25
    buildToolsVersion '25.0.3'
    defaultConfig {
        applicationId "com.example.mihail.googledrive2"
        minSdkVersion 15
        targetSdkVersion 25
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        android.compileOptions.sourceCompatibility 1.8
        android.compileOptions.targetCompatibility 1.8
        packagingOptions {
            exclude 'META-INF/rxjava.properties'
        }
    }
    android {
        compileOptions {
            sourceCompatibility JavaVersion.VERSION_1_8
            targetCompatibility JavaVersion.VERSION_1_8
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    def mockito_version = 'latest.release'
    compile 'com.android.support:appcompat-v7:25.3.1'
    compile 'com.android.support:recyclerview-v7:25.3.1'
    compile 'com.android.support.constraint:constraint-layout:1.0.0-alpha9'
    compile 'com.google.android.gms:play-services-drive:11.0.0'
    compile 'io.reactivex.rxjava2:rxandroid:2.0.1'
    compile 'io.reactivex.rxjava2:rxjava:2.1.1'
    testCompile 'junit:junit:4.12'
    testCompile "org.mockito:mockito-core:$mockito_version"
    androidTestCompile "org.mockito:mockito-android:$mockito_version"
    testCompile 'org.assertj:assertj-core:3.8.0'
    testCompile 'junit:junit:4.12'
//    implementation files('powermock-mockito-1.7.1-full.jar')
//    implementation files('build/powermock-mockito-junit-1.7.1/objenesis-2.4.jar')
//    implementation files('build/powermock-mockito-junit-1.7.1/mockito-core-1.10.19.jar')
//    implementation files('build/powermock-mockito-junit-1.7.1/junit-4.12.jar')
//    implementation files('build/powermock-mockito-junit-1.7.1/javassist-3.21.0-GA.jar')
//    implementation files('build/powermock-mockito-junit-1.7.1/hamcrest-core-1.3.jar')
//    implementation files('build/powermock-mockito-junit-1.7.1/cglib-nodep-2.2.2.jar')
}
